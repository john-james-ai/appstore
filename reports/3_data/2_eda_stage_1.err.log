Traceback (most recent call last):
  File "/home/john/anaconda3/envs/appstore/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/john/anaconda3/envs/appstore/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/john/anaconda3/envs/appstore/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/home/john/anaconda3/envs/appstore/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/john/anaconda3/envs/appstore/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/john/anaconda3/envs/appstore/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/john/anaconda3/envs/appstore/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import dependency
import sys
print(sys.path)
import numpy as np
import pandas as pd
from IPython.display import HTML, display_html
import seaborn as sns

%run d8analysis
import d8analysis as eda

from appstore.container import AppstoreContainer
from appstore.data.dataset.appdata import AppDataDataset
------------------

----- stdout -----
Added /home/john/projects/appstore to sys.path
----- stdout -----
/home/john/projects/appstore/config/logging.yml
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
File [0;32m~/anaconda3/envs/appstore/lib/python3.10/logging/config.py:565[0m, in [0;36mDictConfigurator.configure[0;34m(self)[0m
[1;32m    564[0m [38;5;28;01mtry[39;00m:
[0;32m--> 565[0m     handler [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mconfigure_handler[49m[43m([49m[43mhandlers[49m[43m[[49m[43mname[49m[43m][49m[43m)[49m
[1;32m    566[0m     handler[38;5;241m.[39mname [38;5;241m=[39m name

File [0;32m~/anaconda3/envs/appstore/lib/python3.10/logging/config.py:746[0m, in [0;36mDictConfigurator.configure_handler[0;34m(self, config)[0m
[1;32m    745[0m [38;5;28;01mtry[39;00m:
[0;32m--> 746[0m     result [38;5;241m=[39m [43mfactory[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    747[0m [38;5;28;01mexcept[39;00m [38;5;167;01mTypeError[39;00m [38;5;28;01mas[39;00m te:

File [0;32m~/anaconda3/envs/appstore/lib/python3.10/logging/handlers.py:214[0m, in [0;36mTimedRotatingFileHandler.__init__[0;34m(self, filename, when, interval, backupCount, encoding, delay, utc, atTime, errors)[0m
[1;32m    213[0m encoding [38;5;241m=[39m io[38;5;241m.[39mtext_encoding(encoding)
[0;32m--> 214[0m [43mBaseRotatingHandler[49m[38;5;241;43m.[39;49m[38;5;21;43m__init__[39;49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mfilename[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43ma[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    215[0m [43m                             [49m[43mdelay[49m[38;5;241;43m=[39;49m[43mdelay[49m[43m,[49m[43m [49m[43merrors[49m[38;5;241;43m=[39;49m[43merrors[49m[43m)[49m
[1;32m    216[0m [38;5;28mself[39m[38;5;241m.[39mwhen [38;5;241m=[39m when[38;5;241m.[39mupper()

File [0;32m~/anaconda3/envs/appstore/lib/python3.10/logging/handlers.py:58[0m, in [0;36mBaseRotatingHandler.__init__[0;34m(self, filename, mode, encoding, delay, errors)[0m
[1;32m     55[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m     56[0m [38;5;124;03mUse the specified filename for streamed logging[39;00m
[1;32m     57[0m [38;5;124;03m"""[39;00m
[0;32m---> 58[0m [43mlogging[49m[38;5;241;43m.[39;49m[43mFileHandler[49m[38;5;241;43m.[39;49m[38;5;21;43m__init__[39;49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mfilename[49m[43m,[49m[43m [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m     59[0m [43m                             [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m[43m [49m[43mdelay[49m[38;5;241;43m=[39;49m[43mdelay[49m[43m,[49m
[1;32m     60[0m [43m                             [49m[43merrors[49m[38;5;241;43m=[39;49m[43merrors[49m[43m)[49m
[1;32m     61[0m [38;5;28mself[39m[38;5;241m.[39mmode [38;5;241m=[39m mode

File [0;32m~/anaconda3/envs/appstore/lib/python3.10/logging/__init__.py:1169[0m, in [0;36mFileHandler.__init__[0;34m(self, filename, mode, encoding, delay, errors)[0m
[1;32m   1168[0m [38;5;28;01melse[39;00m:
[0;32m-> 1169[0m     StreamHandler[38;5;241m.[39m[38;5;21m__init__[39m([38;5;28mself[39m, [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_open[49m[43m([49m[43m)[49m)

File [0;32m~/anaconda3/envs/appstore/lib/python3.10/logging/__init__.py:1201[0m, in [0;36mFileHandler._open[0;34m(self)[0m
[1;32m   1200[0m open_func [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_builtin_open
[0;32m-> 1201[0m [38;5;28;01mreturn[39;00m [43mopen_func[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mbaseFilename[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmode[49m[43m,[49m
[1;32m   1202[0m [43m                 [49m[43mencoding[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mencoding[49m[43m,[49m[43m [49m[43merrors[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43merrors[49m[43m)[49m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '/home/john/projects/appstore/jbook/3_data/logs/appstore.log'

The above exception was the direct cause of the following exception:

[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[1], line 1[0m
[0;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mdependency[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01msys[39;00m
[1;32m      3[0m [38;5;28mprint[39m(sys[38;5;241m.[39mpath)

File [0;32m~/projects/appstore/jbook/3_data/dependency.py:37[0m
[1;32m     34[0m [38;5;28;01mfrom[39;00m [38;5;21;01mappstore[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcontainer[39;00m [38;5;28;01mimport[39;00m AppstoreContainer  [38;5;66;03m# noqa[39;00m
[1;32m     36[0m container [38;5;241m=[39m AppstoreContainer()
[0;32m---> 37[0m [43mcontainer[49m[38;5;241;43m.[39;49m[43minit_resources[49m[43m([49m[43m)[49m
[1;32m     38[0m container[38;5;241m.[39mwire(packages[38;5;241m=[39m[[38;5;124m"[39m[38;5;124mappstore[39m[38;5;124m"[39m])

File [0;32msrc/dependency_injector/containers.pyx:343[0m, in [0;36mdependency_injector.containers.DynamicContainer.init_resources[0;34m()[0m

File [0;32msrc/dependency_injector/providers.pyx:3786[0m, in [0;36mdependency_injector.providers.Resource.init[0;34m()[0m

File [0;32msrc/dependency_injector/providers.pyx:225[0m, in [0;36mdependency_injector.providers.Provider.__call__[0;34m()[0m

File [0;32msrc/dependency_injector/providers.pyx:3894[0m, in [0;36mdependency_injector.providers.Resource._provide[0;34m()[0m

File [0;32msrc/dependency_injector/providers.pxd:608[0m, in [0;36mdependency_injector.providers.__call[0;34m()[0m

File [0;32m~/anaconda3/envs/appstore/lib/python3.10/logging/config.py:811[0m, in [0;36mdictConfig[0;34m(config)[0m
[1;32m    809[0m [38;5;28;01mdef[39;00m [38;5;21mdictConfig[39m(config):
[1;32m    810[0m [38;5;250m    [39m[38;5;124;03m"""Configure logging using a dictionary."""[39;00m
[0;32m--> 811[0m     [43mdictConfigClass[49m[43m([49m[43mconfig[49m[43m)[49m[38;5;241;43m.[39;49m[43mconfigure[49m[43m([49m[43m)[49m

File [0;32m~/anaconda3/envs/appstore/lib/python3.10/logging/config.py:572[0m, in [0;36mDictConfigurator.configure[0;34m(self)[0m
[1;32m    570[0m             deferred[38;5;241m.[39mappend(name)
[1;32m    571[0m         [38;5;28;01melse[39;00m:
[0;32m--> 572[0m             [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m'[39m[38;5;124mUnable to configure handler [39m[38;5;124m'[39m
[1;32m    573[0m                              [38;5;124m'[39m[38;5;132;01m%r[39;00m[38;5;124m'[39m [38;5;241m%[39m name) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m
[1;32m    575[0m [38;5;66;03m# Now do any that were deferred[39;00m
[1;32m    576[0m [38;5;28;01mfor[39;00m name [38;5;129;01min[39;00m deferred:

[0;31mValueError[0m: Unable to configure handler 'file'

